{"version":3,"sources":["screens/App/index.js","screens/List/index.js","screens/NotFound404/index.js","Routes.js","serviceWorker.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","snapshot","timer","wrap","_context","prev","next","firebase","ref","once","sent","setState","counter","numChildren","val","t0","console","warn","stop","componentWillUnmount","clearInterval","timerInterval","set","state","startTimer","isTimerOn","setInterval","prevState","push","Date","toLocaleString","stopTimer","clearCounterAndTimer","remove","_this2","_this$state","react_default","createElement","Grid_default","container","direction","justify","alignItems","style","height","StyleButton","variant","onClick","history","ArrowForward_default","StyledCard","item","xs","CardHeader_default","title","StyledNumber","Pipe","Typography_default","marginTop","Component","styled","Button","_templateObject","Card","_templateObject2","CardContent","_templateObject3","div","_templateObject4","TimestampList","timeStamps","arr","forEach","child","concat","margin","width","Button_default","marginBottom","ArrowBack_default","List_StyledCard","List_default","subheader","ListSubheader_default","color","component","fontSize","length","map","index","ListItem_default","key","selected","ListItemIcon_default","AccessTime_default","ListItemText_default","CircularProgress_default","List_templateObject","NotFound","className","Routes","BrowserRouter","basename","process","Switch","Route","exact","path","Boolean","window","location","hostname","match","REACT_APP_API_KEY","REACT_APP_AUTH_DOMAIN","REACT_APP_DATABASE_URL","REACT_APP_PROJECT_ID","REACT_APP_STORAGE_BUCKET","REACT_APP_MESSAGING_SENDER_ID","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","ReactDOM","render","Routes_Routes","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"o9BAYqBA,cAKnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KASRQ,kBAVmBN,OAAAO,EAAA,EAAAP,CAAAQ,EAAAC,EAAAC,KAUC,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAL,EAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEOC,aAEpBC,IAAI,cACJC,KAAK,SALQ,cAEVR,EAFUG,EAAAM,KAAAN,EAAAE,KAAA,EAMIC,aAEjBC,IAAI,SACJC,KAAK,SATQ,OAMVP,EANUE,EAAAM,KAUhBtB,EAAKuB,SAAS,iBAAO,CACnBC,QAASX,EAASY,cAClBX,MAAOA,EAAMY,SAZCV,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAW,GAAAX,EAAA,SAehBY,QAAQC,KAARb,EAAAW,IAfgB,yBAAAX,EAAAc,SAAAlB,EAAAT,KAAA,aAVDH,EA6BnB+B,qBAAuB,WACrBC,cAAchC,EAAKiC,eACnBd,aAEGC,IAAI,SACJc,IAAIlC,EAAKmC,MAAMrB,QAlCDd,EAqCnBoC,WAAa,WACXpC,EAAKuB,SAAS,iBAAO,CAAEc,WAAW,KAClCrC,EAAKiC,cAAgBK,YAAY,WAC/BtC,EAAKuB,SAAS,SAAAgB,GAAS,MAAK,CAC1BzB,MAAOyB,EAAUzB,MAAQ,MAED,IAAtBd,EAAKmC,MAAMrB,QACbK,aAEGC,IAAI,cACJoB,MAAK,IAAIC,MAAOC,kBACnB1C,EAAKuB,SAAS,SAAAgB,GAAS,MAAK,CAC1BzB,MAAO,GACPU,QAASe,EAAUf,QAAU,OAGhC,MArDcxB,EAwDnB2C,UAAY,WACVX,cAAchC,EAAKiC,eACnBjC,EAAKuB,SAAS,iBAAO,CAAEc,WAAW,MA1DjBrC,EA6DnB4C,qBAAuB,WACrBzB,aAEGC,IAAI,cACJyB,SACHb,cAAchC,EAAKiC,eACnBjC,EAAKuB,SAAS,iBAAO,CACnBT,MAAO,GACPU,QAAS,EACTa,WAAW,MApEbrC,EAAKmC,MAAQ,CACXrB,MAAO,GACPU,QAAS,EACTa,WAAW,GAEbrC,EAAKiC,cAAgB,KAPJjC,wEA0EV,IAAA8C,EAAA3C,KAAA4C,EAC+B5C,KAAKgC,MAAnCrB,EADDiC,EACCjC,MAAOU,EADRuB,EACQvB,QAASa,EADjBU,EACiBV,UACxB,OACEW,EAAAtC,EAAAuC,cAACC,EAAAxC,EAAD,CACEyC,WAAS,EACTC,UAAU,SACVC,QAAQ,SACRC,WAAW,SACXC,MAAO,CAAEC,OAAQ,UAEjBR,EAAAtC,EAAAuC,cAACC,EAAAxC,EAAD,CAAMyC,WAAS,EAACE,QAAQ,UACtBL,EAAAtC,EAAAuC,cAACQ,EAAD,CACEC,QAAQ,WACRC,QAAStB,EAAYlC,KAAKwC,UAAYxC,KAAKiC,YAE1CC,EAAY,QAAU,SAEzBW,EAAAtC,EAAAuC,cAACQ,EAAD,CAAaC,QAAQ,WAAWC,QAASxD,KAAKyC,sBAA9C,SAGAI,EAAAtC,EAAAuC,cAACQ,EAAD,CACEC,QAAQ,WACRC,QAAS,kBAAMb,EAAK/C,MAAM6D,QAAQpB,KAAK,WAFzC,kBAIiBQ,EAAAtC,EAAAuC,cAACY,EAAAnD,EAAD,QAGnBsC,EAAAtC,EAAAuC,cAACa,EAAD,KACEd,EAAAtC,EAAAuC,cAACC,EAAAxC,EAAD,CACEyC,WAAS,EACTY,MAAI,EACJX,UAAU,SACVC,QAAQ,SACRC,WAAW,SACXU,GAAI,GAEJhB,EAAAtC,EAAAuC,cAACgB,EAAAvD,EAAD,CAAYwD,MAAM,UAClBlB,EAAAtC,EAAAuC,cAACkB,EAAD,KAAerD,IAEjBkC,EAAAtC,EAAAuC,cAACmB,EAAD,MACApB,EAAAtC,EAAAuC,cAACC,EAAAxC,EAAD,CACEyC,WAAS,EACTY,MAAI,EACJX,UAAU,SACVC,QAAQ,SACRC,WAAW,SACXU,GAAI,GAEJhB,EAAAtC,EAAAuC,cAACgB,EAAAvD,EAAD,CAAYwD,MAAM,YAClBlB,EAAAtC,EAAAuC,cAACkB,EAAD,KAAe3C,KAGnBwB,EAAAtC,EAAAuC,cAACoB,EAAA3D,EAAD,CAAY6C,MAAO,CAAEe,UAAW,SAAhC,4BAnIyBC,aAyI3Bd,EAAce,YAAOC,IAAPD,CAAHE,KAOXZ,EAAaU,YAAOG,IAAPH,CAAHI,KAQVT,EAAeK,YAAOK,IAAPL,CAAHM,KAKZV,EAAOI,IAAOO,IAAVC,qRCxJWC,8MAKnB9C,MAAQ,CACN+C,WAAY,MAGd3E,uCAAoB,SAAAK,IAAA,IAAAuE,EAAA,OAAA1E,EAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAEVkE,EAAM,GAFInE,EAAAE,KAAA,EAGOC,aAEpBC,IAAI,cACJC,KAAK,SANQ,OAAAL,EAAAM,KAOP8D,QAAQ,SAAAC,GACfF,EAAI3C,KAAK6C,EAAM3D,SAEjB1B,EAAKuB,SAAS,iBAAO,CAAE2D,WAAU,GAAAI,OAAMH,MACvCvD,QAAQC,KAAK7B,EAAKmC,MAAM+C,YAXRlE,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAW,GAAAX,EAAA,SAahBY,QAAQC,KAARb,EAAAW,IAbgB,yBAAAX,EAAAc,SAAAlB,EAAAT,KAAA,qFAiBX,IAAA2C,EAAA3C,KACC+E,EAAe/E,KAAKgC,MAApB+C,WACR,OACElC,EAAAtC,EAAAuC,cAACC,EAAAxC,EAAD,CACEyC,WAAS,EACTC,UAAU,SACVC,QAAQ,SACRC,WAAW,SACXC,MAAO,CAAEgC,OAAQ,gBAEjBvC,EAAAtC,EAAAuC,cAACC,EAAAxC,EAAD,CAAMyC,WAAS,EAACE,QAAQ,aAAaE,MAAO,CAAEiC,MAAO,SACnDxC,EAAAtC,EAAAuC,cAACwC,EAAA/E,EAAD,CACEgD,QAAQ,WACRC,QAAS,kBAAMb,EAAK/C,MAAM6D,QAAQpB,KAAK,MACvCe,MAAO,CAAEmC,aAAc,SAEvB1C,EAAAtC,EAAAuC,cAAC0C,GAAAjF,EAAD,MALF,kBASFsC,EAAAtC,EAAAuC,cAAC2C,GAAD,KACE5C,EAAAtC,EAAAuC,cAAC4C,EAAAnF,EAAD,CACEoF,UACE9C,EAAAtC,EAAAuC,cAAC8C,EAAArF,EAAD,CACEsF,MAAM,UACNC,UAAU,KACV1C,MAAO,CAAE2C,SAAU,SAHrB,mBASDhB,EAAWiB,OAAS,EACnBjB,EAAWkB,IAAI,SAACrC,EAAMsC,GAAP,OACbrD,EAAAtC,EAAAuC,cAACqD,EAAA5F,EAAD,CAAU6F,IAAKF,EAAOG,SAAUH,EAAQ,IAAM,GAC5CrD,EAAAtC,EAAAuC,cAACwD,EAAA/F,EAAD,KACEsC,EAAAtC,EAAAuC,cAACyD,GAAAhG,EAAD,OAEFsC,EAAAtC,EAAAuC,cAAC0D,EAAAjG,EAAD,KAAeqD,MAGK,IAAtBmB,EAAWiB,OAAe,KAC5BnD,EAAAtC,EAAAuC,cAAC2D,GAAAlG,EAAD,QAINsC,EAAAtC,EAAAuC,cAACoB,EAAA3D,EAAD,CAAY6C,MAAO,CAAEe,UAAW,SAAhC,4BAxEmCC,aA8ErCT,GAAaU,YAAOG,IAAPH,CAAHqC,MCnFDC,GAVE,SAAA/G,GACf,OACEiD,EAAAtC,EAAAuC,cAAA,OAAK8D,UAAU,sBACb/D,EAAAtC,EAAAuC,cAAA,iBACAD,EAAAtC,EAAAuC,cAAA,wCACAD,EAAAtC,EAAAuC,cAAA,UAAQU,QAAS,kBAAM5D,EAAM6D,QAAQpB,KAAK,OAA1C,kBCDewE,oLAEjB,OACEhE,EAAAtC,EAAAuC,cAACgE,EAAA,EAAD,CAAeC,SAAUC,gCACvBnE,EAAAtC,EAAAuC,cAACmE,EAAA,EAAD,KACEpE,EAAAtC,EAAAuC,cAACoE,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAItB,UAAWnG,IACjCkD,EAAAtC,EAAAuC,cAACoE,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,QAAQtB,UAAWhB,KACrCjC,EAAAtC,EAAAuC,cAACoE,EAAA,EAAD,CAAOpB,UAAWa,cAPQvC,aCMhBiD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,kECJFT,6YANFU,wBACAC,4BACAC,6BACAC,2BACAC,+BACAC,oCAGFC,wBAAc,CACZC,OAAQP,GACRQ,WAAYP,GACZQ,YAAaP,GACbQ,UAAWP,GACXQ,cAAeP,GACfQ,kBAAmBP,KAGrBQ,IAASC,OAAO3F,EAAAtC,EAAAuC,cAAC2F,GAAD,MAAYC,SAASC,eAAe,SDwG9C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.9e7ab521.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport * as firebase from \"firebase\";\nimport styled from \"styled-components\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\nimport Typography from \"@material-ui/core/Typography\";\n\nexport default class App extends Component {\n  static propTypes = {\n    history: PropTypes.object\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      timer: 40,\n      counter: 0,\n      isTimerOn: false\n    };\n    this.timerInterval = null;\n  }\n\n  componentDidMount = async () => {\n    try {\n      const snapshot = await firebase\n        .database()\n        .ref(\"timeStamps\")\n        .once(\"value\");\n      const timer = await firebase\n        .database()\n        .ref(\"timer\")\n        .once(\"value\");\n      this.setState(() => ({\n        counter: snapshot.numChildren(),\n        timer: timer.val()\n      }));\n    } catch (e) {\n      console.warn(e);\n    }\n  };\n\n  componentWillUnmount = () => {\n    clearInterval(this.timerInterval);\n    firebase\n      .database()\n      .ref(\"timer\")\n      .set(this.state.timer);\n  };\n\n  startTimer = () => {\n    this.setState(() => ({ isTimerOn: true }));\n    this.timerInterval = setInterval(() => {\n      this.setState(prevState => ({\n        timer: prevState.timer - 1\n      }));\n      if (this.state.timer === -1) {\n        firebase\n          .database()\n          .ref(\"timeStamps\")\n          .push(new Date().toLocaleString());\n        this.setState(prevState => ({\n          timer: 39,\n          counter: prevState.counter + 1\n        }));\n      }\n    }, 1000);\n  };\n\n  stopTimer = () => {\n    clearInterval(this.timerInterval);\n    this.setState(() => ({ isTimerOn: false }));\n  };\n\n  clearCounterAndTimer = () => {\n    firebase\n      .database()\n      .ref(\"timeStamps\")\n      .remove();\n    clearInterval(this.timerInterval);\n    this.setState(() => ({\n      timer: 40,\n      counter: 0,\n      isTimerOn: false\n    }));\n  };\n\n  render() {\n    const { timer, counter, isTimerOn } = this.state;\n    return (\n      <Grid\n        container\n        direction=\"column\"\n        justify=\"center\"\n        alignItems=\"center\"\n        style={{ height: \"100vh\" }}\n      >\n        <Grid container justify=\"center\">\n          <StyleButton\n            variant=\"outlined\"\n            onClick={isTimerOn ? this.stopTimer : this.startTimer}\n          >\n            {isTimerOn ? \"Pause\" : \"Start\"}\n          </StyleButton>\n          <StyleButton variant=\"outlined\" onClick={this.clearCounterAndTimer}>\n            clear\n          </StyleButton>\n          <StyleButton\n            variant=\"outlined\"\n            onClick={() => this.props.history.push(\"/list\")}\n          >\n            Go to the list <ArrowForwardIcon />\n          </StyleButton>\n        </Grid>\n        <StyledCard>\n          <Grid\n            container\n            item\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n            xs={6}\n          >\n            <CardHeader title=\"Timer\" />\n            <StyledNumber>{timer}</StyledNumber>\n          </Grid>\n          <Pipe />\n          <Grid\n            container\n            item\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n            xs={6}\n          >\n            <CardHeader title=\"Counter\" />\n            <StyledNumber>{counter}</StyledNumber>\n          </Grid>\n        </StyledCard>\n        <Typography style={{ marginTop: \"30px\" }}>Made by O.Bakier</Typography>\n      </Grid>\n    );\n  }\n}\n\nconst StyleButton = styled(Button)`\n  && {\n    margin: 16px;\n    height: 20vh;\n    width: 15vw;\n  }\n`;\nconst StyledCard = styled(Card)`\n  && {\n    display: flex;\n    flex-direction: row;\n    height: 50vh;\n    width: 50vw;\n  }\n`;\nconst StyledNumber = styled(CardContent)`\n  && {\n    font-size: 112px;\n  }\n`;\nconst Pipe = styled.div`\n  && {\n    width: 3px;\n    height: 80%;\n    background: black;\n    margin: auto;\n  }\n`;\n","import React, { Component } from \"react\";\nimport * as firebase from \"firebase\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport List from \"@material-ui/core/List\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport Button from \"@material-ui/core/Button\";\nimport ArrowBack from \"@material-ui/icons/ArrowBack\";\nimport AccessTimeIcon from \"@material-ui/icons/AccessTime\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nexport default class TimestampList extends Component {\n  static propTypes = {\n    history: PropTypes.object\n  };\n\n  state = {\n    timeStamps: []\n  };\n\n  componentDidMount = async () => {\n    try {\n      const arr = [];\n      const snapshot = await firebase\n        .database()\n        .ref(\"timeStamps\")\n        .once(\"value\");\n      snapshot.forEach(child => {\n        arr.push(child.val());\n      });\n      this.setState(() => ({ timeStamps: [...arr] }));\n      console.warn(this.state.timeStamps);\n    } catch (e) {\n      console.warn(e);\n    }\n  };\n\n  render() {\n    const { timeStamps } = this.state;\n    return (\n      <Grid\n        container\n        direction=\"column\"\n        justify=\"center\"\n        alignItems=\"center\"\n        style={{ margin: \"30px 0 20px\" }}\n      >\n        <Grid container justify=\"flex-start\" style={{ width: \"40vw\" }}>\n          <Button\n            variant=\"outlined\"\n            onClick={() => this.props.history.push(\"/\")}\n            style={{ marginBottom: \"20px\" }}\n          >\n            <ArrowBack />\n            Go to the App\n          </Button>\n        </Grid>\n        <StyledCard>\n          <List\n            subheader={\n              <ListSubheader\n                color=\"primary\"\n                component=\"h1\"\n                style={{ fontSize: \"28px\" }}\n              >\n                Timestamp List\n              </ListSubheader>\n            }\n          >\n            {timeStamps.length > 0 ? (\n              timeStamps.map((item, index) => (\n                <ListItem key={index} selected={index % 2 === 0 ? true : false}>\n                  <ListItemIcon>\n                    <AccessTimeIcon />\n                  </ListItemIcon>\n                  <ListItemText>{item}</ListItemText>\n                </ListItem>\n              ))\n            ) : timeStamps.length === 0 ? null : (\n              <CircularProgress />\n            )}\n          </List>\n        </StyledCard>\n        <Typography style={{ marginTop: \"30px\" }}>Made by O.Bakier</Typography>\n      </Grid>\n    );\n  }\n}\n\nconst StyledCard = styled(Card)`\n  && {\n    width: 40vw;\n    height: 100%;\n  }\n`;\n","import React from \"react\";\n\nconst NotFound = props => {\n  return (\n    <div className=\"notfound-container\">\n      <h1>404</h1>\n      <p>Ooops, Something Went Wrong</p>\n      <button onClick={() => props.history.push(\"/\")}>Back to home</button>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport App from \"./screens/App\";\nimport TimestampList from \"./screens/List\";\nimport NotFound from \"./screens/NotFound404\";\n\nexport default class Routes extends Component {\n  render() {\n    return (\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route exact path=\"/\" component={App} />\n          <Route exact path=\"/list\" component={TimestampList} />\n          <Route component={NotFound} />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Router from \"./Routes\";\nimport { initializeApp } from \"firebase\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst {\n  REACT_APP_API_KEY,\n  REACT_APP_AUTH_DOMAIN,\n  REACT_APP_DATABASE_URL,\n  REACT_APP_PROJECT_ID,\n  REACT_APP_STORAGE_BUCKET,\n  REACT_APP_MESSAGING_SENDER_ID\n} = process.env;\n\ninitializeApp({\n  apiKey: REACT_APP_API_KEY,\n  authDomain: REACT_APP_AUTH_DOMAIN,\n  databaseURL: REACT_APP_DATABASE_URL,\n  projectId: REACT_APP_PROJECT_ID,\n  storageBucket: REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: REACT_APP_MESSAGING_SENDER_ID\n});\n\nReactDOM.render(<Router />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}